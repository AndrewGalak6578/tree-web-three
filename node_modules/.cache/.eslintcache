[{"/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/index.js":"1","/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/reportWebVitals.js":"2","/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App.js":"3","/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App1.js":"4","/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App2.js":"5"},{"size":935,"mtime":1688830652783,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1688548681720,"results":"8","hashOfConfig":"7"},{"size":1355,"mtime":1688561019760,"results":"9","hashOfConfig":"7"},{"size":2528,"mtime":1688815503506,"results":"10","hashOfConfig":"7"},{"size":2828,"mtime":1688833764825,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"12df6sq",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"15"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/index.js",[],[],[],"/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/reportWebVitals.js",[],[],"/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App.js",["30","31","32","33","34"],[],"import logo from './logo.svg';\nimport './App.css';\nimport {ConnectButton} from '@suiet/wallet-kit';\nimport { useWallet } from '@suiet/wallet-kit';\nimport { useEffect } from 'react';\nimport { TransactionBlock} from \"@mysten/sui.js\";\n\nfunction App() {\n  const wallet = useWallet()\n  useEffect(() => {\n    if (!wallet.connected) return;\n    console.log('connected wallet name: ', wallet.name)\n    console.log('account address: ', wallet.account?.address)\n    console.log('account publicKey: ', wallet.account?.publicKey)\n  }, [wallet.connected])\n\n  async function handleMoveCall() {\n    const tx = new TransactionBlock();\n    const packageObjectId = \"0x1\";\n    tx.moveCall({\n      target: `0x41d154bdf99fa90ce79b963561c83c206f8c9dc0b868ea3d7ab5b28d33a47bb4::devnet_nft::mint_to_sender`,\n      arguments: [\n        tx.pure(\"Sample NFT\"), \n        tx.pure(\"sample minted NFT\"),\n        tx.pure(\"https://github.com/AndrewGalak6578/tree-web-three/blob/main/logo.png?raw=true\")], \n    });\n    await wallet.signAndExecuteTransactionBlock({\n      transactionBlock: tx,\n    });\n  }\n\n  async function handleSignMessage() {\n    await wallet.signMessage({\n      message: new TextEncoder().encode(\"Hello World\"),\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      \n      \n        <ConnectButton/>\n\n        \n      \n      \n    </div>\n    \n  );\n}\n\nexport default App;\n","/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App1.js",["35","36","37","38","39"],[],"import logo from './logo.svg';\nimport './App.css';\nimport {ConnectButton} from '@suiet/wallet-kit';\nimport { useWallet } from '@suiet/wallet-kit';\nimport { useEffect } from 'react';\nimport { TransactionBlock, testnetConnection} from \"@mysten/sui.js\";\nimport { JsonRpcProvider } from '@mysten/sui.js';\n\nfunction App1() {\n  const wallet = useWallet()\n  const provider = new JsonRpcProvider(testnetConnection);\n  \n\n  useEffect(() => {\n    if (!wallet.connected) return;\n    console.log('connected wallet name: ', wallet.name)\n    console.log('account address: ', wallet.account?.address)\n    console.log('account publicKey: ', wallet.account?.publicKey)\n  }, [wallet.connected])\n\n  async function handleMoveCall() {\n    const tx = new TransactionBlock();\n    const packageObjectId = \"0x1\";\n    tx.moveCall({\n      target: `0x41d154bdf99fa90ce79b963561c83c206f8c9dc0b868ea3d7ab5b28d33a47bb4::devnet_nft::mint_to_sender`,\n      arguments: [\n        tx.pure(\"Sample NFT\"), \n        tx.pure(\"sample minted NFT\"),\n        tx.pure(\"https://github.com/AndrewGalak6578/tree-web-three/blob/main/logo.png?raw=true\")], \n    });\n    await wallet.signAndExecuteTransactionBlock({\n      transactionBlock: tx,\n    });\n  }\n\n  async function handleSignMessage() {\n    const objects = await provider.getOwnedObjects({\n        owner: wallet.account?.address,\n      });\n      const txn = await provider.getObject({\n        id: objects.data[0].data.objectId,\n        // fetch the object content field\n        options: {showContent: true},\n      });\n      var s = Number(0);\n      var len = Number(objects.data.length) ;\n      console.log('Count of NFTs: ', len);\n    await wallet.signMessage({\n      message: new TextEncoder().encode(\"Hello World\"),\n      \n    });\n    console.log('account NFTs: ', objects);\n    for (let i = 0; i < len; i += 1) {\n      var nft_count = await provider.getObject({\n        id: objects.data[i].data.objectId,\n        options: {showContent: true},\n      });\n      if (nft_count.data.content.type === \"0x41d154bdf99fa90ce79b963561c83c206f8c9dc0b868ea3d7ab5b28d33a47bb4::devnet_nft::DevNetNFT\") {\n        console.log('Yes', objects.data[i].data.objectId);\n        \n      }\n      \n    };\n    \n    \n    console.log('NFT-Data Bsc:', txn);\n    \n  }\n\n  return (\n    <div className=\"App1\">\n      \n      \n        \n        <button onClick={() => handleMoveCall()}>Mint NFT</button>\n        <button onClick={() => handleSignMessage()}>Sign message</button>\n        \n        \n      \n      \n    </div>\n    \n  );\n}\n\nexport default App1;","/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App2.js",["40","41","42","43","44","45","46","47"],[],{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"53","line":15,"column":6,"nodeType":"54","endLine":15,"endColumn":24,"suggestions":"55"},{"ruleId":"48","severity":1,"message":"56","line":17,"column":18,"nodeType":"50","messageId":"51","endLine":17,"endColumn":32},{"ruleId":"48","severity":1,"message":"57","line":19,"column":11,"nodeType":"50","messageId":"51","endLine":19,"endColumn":26},{"ruleId":"48","severity":1,"message":"58","line":32,"column":18,"nodeType":"50","messageId":"51","endLine":32,"endColumn":35},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"59","line":3,"column":9,"nodeType":"50","messageId":"51","endLine":3,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":19,"column":6,"nodeType":"54","endLine":19,"endColumn":24,"suggestions":"60"},{"ruleId":"48","severity":1,"message":"57","line":23,"column":11,"nodeType":"50","messageId":"51","endLine":23,"endColumn":26},{"ruleId":"48","severity":1,"message":"61","line":45,"column":11,"nodeType":"50","messageId":"51","endLine":45,"endColumn":12},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":12},{"ruleId":"48","severity":1,"message":"59","line":3,"column":9,"nodeType":"50","messageId":"51","endLine":3,"endColumn":22},{"ruleId":"48","severity":1,"message":"62","line":8,"column":5,"nodeType":"50","messageId":"51","endLine":8,"endColumn":9},{"ruleId":"52","severity":1,"message":"53","line":21,"column":6,"nodeType":"54","endLine":21,"endColumn":24,"suggestions":"63"},{"ruleId":"48","severity":1,"message":"57","line":25,"column":11,"nodeType":"50","messageId":"51","endLine":25,"endColumn":26},{"ruleId":"48","severity":1,"message":"64","line":49,"column":11,"nodeType":"50","messageId":"51","endLine":49,"endColumn":19},{"ruleId":"48","severity":1,"message":"61","line":51,"column":11,"nodeType":"50","messageId":"51","endLine":51,"endColumn":12},{"ruleId":"65","severity":1,"message":"66","line":88,"column":9,"nodeType":"67","endLine":88,"endColumn":136},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'wallet.account?.address', 'wallet.account?.publicKey', and 'wallet.name'. Either include them or remove the dependency array.","ArrayExpression",["68"],"'handleMoveCall' is defined but never used.","'packageObjectId' is assigned a value but never used.","'handleSignMessage' is defined but never used.","'ConnectButton' is defined but never used.",["69"],"'s' is assigned a value but never used.","'file' is assigned a value but never used.",["70"],"'url_list' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"71","fix":"72"},{"desc":"71","fix":"73"},{"desc":"71","fix":"74"},"Update the dependencies array to be: [wallet.account?.address, wallet.account?.publicKey, wallet.connected, wallet.name]",{"range":"75","text":"76"},{"range":"77","text":"76"},{"range":"78","text":"76"},[523,541],"[wallet.account?.address, wallet.account?.publicKey, wallet.connected, wallet.name]",[656,674],[694,712]]