{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { ConnectButton } from '@suiet/wallet-kit';\nimport { useWallet } from '@suiet/wallet-kit';\nimport { useEffect } from 'react';\nimport { transactionBlock } from \"\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const wallet = useWallet();\n  useEffect(() => {\n    var _wallet$account, _wallet$account2;\n    if (!wallet.connected) return;\n    console.log('connected wallet name: ', wallet.name);\n    console.log('account address: ', (_wallet$account = wallet.account) === null || _wallet$account === void 0 ? void 0 : _wallet$account.address);\n    console.log('account publicKey: ', (_wallet$account2 = wallet.account) === null || _wallet$account2 === void 0 ? void 0 : _wallet$account2.publicKey);\n  }, [wallet.connected]);\n  async function handleMoveCall() {\n    const tx = new TransactionBlock();\n    const packageObjectId = \"0x1\";\n    tx.moveCall({\n      target: `${packageObjectId}::nft::mint`,\n      arguments: [tx.pure(\"Example NFT\")]\n    });\n    await wallet.signAndExecuteTransactionBlock({\n      transactionBlock: tx\n    });\n  }\n  async function handleSignMessage() {\n    await wallet.signMessage({\n      message: new TextEncoder().encode(\"Hello World\")\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ConnectButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Op0/wBxK9c7Ln+hGs0edgZQ9zC0=\", false, function () {\n  return [useWallet];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ConnectButton","useWallet","useEffect","transactionBlock","jsxDEV","_jsxDEV","App","_s","wallet","_wallet$account","_wallet$account2","connected","console","log","name","account","address","publicKey","handleMoveCall","tx","TransactionBlock","packageObjectId","moveCall","target","arguments","pure","signAndExecuteTransactionBlock","handleSignMessage","signMessage","message","TextEncoder","encode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {ConnectButton} from '@suiet/wallet-kit';\nimport { useWallet } from '@suiet/wallet-kit';\nimport { useEffect } from 'react';\nimport { transactionBlock} from \"\"\n\nfunction App() {\n  const wallet = useWallet()\n  useEffect(() => {\n    if (!wallet.connected) return;\n    console.log('connected wallet name: ', wallet.name)\n    console.log('account address: ', wallet.account?.address)\n    console.log('account publicKey: ', wallet.account?.publicKey)\n  }, [wallet.connected])\n\n  async function handleMoveCall() {\n    const tx = new TransactionBlock();\n    const packageObjectId = \"0x1\";\n    tx.moveCall({\n      target: `${packageObjectId}::nft::mint`,\n      arguments: [tx.pure(\"Example NFT\")],\n    });\n    await wallet.signAndExecuteTransactionBlock({\n      transactionBlock: tx,\n    });\n  }\n\n  async function handleSignMessage() {\n    await wallet.signMessage({\n      message: new TextEncoder().encode(\"Hello World\"),\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      \n      \n        <ConnectButton/>\n\n        \n      \n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAAQC,aAAa,QAAO,mBAAmB;AAC/C,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,gBAAgB,QAAO,EAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1BC,SAAS,CAAC,MAAM;IAAA,IAAAO,eAAA,EAAAC,gBAAA;IACd,IAAI,CAACF,MAAM,CAACG,SAAS,EAAE;IACvBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,MAAM,CAACM,IAAI,CAAC;IACnDF,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAAJ,eAAA,GAAED,MAAM,CAACO,OAAO,cAAAN,eAAA,uBAAdA,eAAA,CAAgBO,OAAO,CAAC;IACzDJ,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAAH,gBAAA,GAAEF,MAAM,CAACO,OAAO,cAAAL,gBAAA,uBAAdA,gBAAA,CAAgBO,SAAS,CAAC;EAC/D,CAAC,EAAE,CAACT,MAAM,CAACG,SAAS,CAAC,CAAC;EAEtB,eAAeO,cAAcA,CAAA,EAAG;IAC9B,MAAMC,EAAE,GAAG,IAAIC,gBAAgB,CAAC,CAAC;IACjC,MAAMC,eAAe,GAAG,KAAK;IAC7BF,EAAE,CAACG,QAAQ,CAAC;MACVC,MAAM,EAAG,GAAEF,eAAgB,aAAY;MACvCG,SAAS,EAAE,CAACL,EAAE,CAACM,IAAI,CAAC,aAAa,CAAC;IACpC,CAAC,CAAC;IACF,MAAMjB,MAAM,CAACkB,8BAA8B,CAAC;MAC1CvB,gBAAgB,EAAEgB;IACpB,CAAC,CAAC;EACJ;EAEA,eAAeQ,iBAAiBA,CAAA,EAAG;IACjC,MAAMnB,MAAM,CAACoB,WAAW,CAAC;MACvBC,OAAO,EAAE,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,aAAa;IACjD,CAAC,CAAC;EACJ;EAEA,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAGhB5B,OAAA,CAACL,aAAa;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKf,CAAC;AAEV;AAAC9B,EAAA,CAtCQD,GAAG;EAAA,QACKL,SAAS;AAAA;AAAAqC,EAAA,GADjBhC,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}