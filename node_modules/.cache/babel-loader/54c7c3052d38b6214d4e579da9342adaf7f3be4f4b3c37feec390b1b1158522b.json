{"ast":null,"code":"import { FaucetRateLimitError } from \"../utils/errors.js\";\nasync function requestSuiFromFaucet(endpoint, recipient, httpHeaders) {\n  const res = await fetch(endpoint, {\n    method: \"POST\",\n    body: JSON.stringify({\n      FixedAmountRequest: {\n        recipient\n      }\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...(httpHeaders || {})\n    }\n  });\n  if (res.status === 429) {\n    throw new FaucetRateLimitError(`Too many requests from this client have been sent to the faucet. Please retry later`);\n  }\n  let parsed;\n  try {\n    parsed = await res.json();\n  } catch (e) {\n    throw new Error(`Encountered error when parsing response from faucet, error: ${e}, status ${res.status}, response ${res}`);\n  }\n  if (parsed.error) {\n    throw new Error(`Faucet returns error: ${parsed.error}`);\n  }\n  return parsed;\n}\nexport { requestSuiFromFaucet };","map":{"version":3,"names":["FaucetRateLimitError","requestSuiFromFaucet","endpoint","recipient","httpHeaders","res","fetch","method","body","JSON","stringify","FixedAmountRequest","headers","status","parsed","json","e","Error","error"],"sources":["/Users/admin/Downloads/tree-web-three1/tree-web-three-react/node_modules/@mysten/sui.js/src/rpc/faucet-client.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { FaucetResponse, SuiAddress } from '../types/index.js';\nimport { FaucetRateLimitError } from '../utils/errors.js';\nimport type { HttpHeaders } from './client.js';\n\nexport async function requestSuiFromFaucet(\n\tendpoint: string,\n\trecipient: SuiAddress,\n\thttpHeaders?: HttpHeaders,\n): Promise<FaucetResponse> {\n\tconst res = await fetch(endpoint, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify({\n\t\t\tFixedAmountRequest: {\n\t\t\t\trecipient,\n\t\t\t},\n\t\t}),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t...(httpHeaders || {}),\n\t\t},\n\t});\n\n\tif (res.status === 429) {\n\t\tthrow new FaucetRateLimitError(\n\t\t\t`Too many requests from this client have been sent to the faucet. Please retry later`,\n\t\t);\n\t}\n\tlet parsed;\n\ttry {\n\t\tparsed = await res.json();\n\t} catch (e) {\n\t\tthrow new Error(\n\t\t\t`Encountered error when parsing response from faucet, error: ${e}, status ${res.status}, response ${res}`,\n\t\t);\n\t}\n\tif (parsed.error) {\n\t\tthrow new Error(`Faucet returns error: ${parsed.error}`);\n\t}\n\treturn parsed;\n}\n"],"mappings":"AAIA,SAASA,oBAAA,QAA4B;AAGrC,eAAsBC,qBACrBC,QAAA,EACAC,SAAA,EACAC,WAAA,EAC0B;EAC1B,MAAMC,GAAA,GAAM,MAAMC,KAAA,CAAMJ,QAAA,EAAU;IACjCK,MAAA,EAAQ;IACRC,IAAA,EAAMC,IAAA,CAAKC,SAAA,CAAU;MACpBC,kBAAA,EAAoB;QACnBR;MACD;IACD,CAAC;IACDS,OAAA,EAAS;MACR,gBAAgB;MAChB,IAAIR,WAAA,IAAe,CAAC;IACrB;EACD,CAAC;EAED,IAAIC,GAAA,CAAIQ,MAAA,KAAW,KAAK;IACvB,MAAM,IAAIb,oBAAA,CACT,qFACD;EACD;EACA,IAAIc,MAAA;EACJ,IAAI;IACHA,MAAA,GAAS,MAAMT,GAAA,CAAIU,IAAA,CAAK;EACzB,SAASC,CAAA,EAAP;IACD,MAAM,IAAIC,KAAA,CACT,+DAA+DD,CAAA,YAAaX,GAAA,CAAIQ,MAAA,cAAoBR,GAAA,EACrG;EACD;EACA,IAAIS,MAAA,CAAOI,KAAA,EAAO;IACjB,MAAM,IAAID,KAAA,CAAM,yBAAyBH,MAAA,CAAOI,KAAA,EAAO;EACxD;EACA,OAAOJ,MAAA;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}