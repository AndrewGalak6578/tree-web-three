{"ast":null,"code":"var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _options;\nclass Connection {\n  constructor(options) {\n    __privateAdd(this, _options, void 0);\n    __privateSet(this, _options, options);\n  }\n  get fullnode() {\n    return __privateGet(this, _options).fullnode;\n  }\n  // TODO: Decide if we should default the websocket URL like this:\n  get websocket() {\n    return __privateGet(this, _options).websocket || __privateGet(this, _options).fullnode;\n  }\n  get faucet() {\n    return __privateGet(this, _options).faucet;\n  }\n}\n_options = new WeakMap();\nconst localnetConnection = new Connection({\n  fullnode: \"http://127.0.0.1:9000\",\n  faucet: \"http://127.0.0.1:9123/gas\"\n});\nconst devnetConnection = new Connection({\n  fullnode: \"https://fullnode.devnet.sui.io:443/\",\n  faucet: \"https://faucet.devnet.sui.io/gas\"\n});\nconst testnetConnection = new Connection({\n  fullnode: \"https://fullnode.testnet.sui.io:443/\",\n  faucet: \"https://faucet.testnet.sui.io/gas\"\n});\nconst mainnetConnection = new Connection({\n  fullnode: \"https://fullnode.mainnet.sui.io:443/\"\n});\nexport { Connection, devnetConnection, localnetConnection, mainnetConnection, testnetConnection };","map":{"version":3,"names":["_options","Connection","constructor","options","__privateAdd","__privateSet","fullnode","__privateGet","websocket","faucet","WeakMap","localnetConnection","devnetConnection","testnetConnection","mainnetConnection"],"sources":["/Users/admin/Downloads/tree-web-three1/tree-web-three-react/node_modules/@mysten/sui.js/src/rpc/connection.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\ninterface ConnectionOptions {\n\tfullnode: string;\n\twebsocket?: string;\n\tfaucet?: string;\n}\n\nexport class Connection {\n\t#options: ConnectionOptions;\n\tconstructor(options: ConnectionOptions) {\n\t\tthis.#options = options;\n\t}\n\n\tget fullnode() {\n\t\treturn this.#options.fullnode;\n\t}\n\n\t// TODO: Decide if we should default the websocket URL like this:\n\tget websocket() {\n\t\treturn this.#options.websocket || this.#options.fullnode;\n\t}\n\n\tget faucet() {\n\t\treturn this.#options.faucet;\n\t}\n}\n\n// TODO: Maybe don't have pre-built connections, and instead just have pre-built objects that folks\n// can use with the connection?\nexport const localnetConnection = new Connection({\n\tfullnode: 'http://127.0.0.1:9000',\n\tfaucet: 'http://127.0.0.1:9123/gas',\n});\n\nexport const devnetConnection = new Connection({\n\tfullnode: 'https://fullnode.devnet.sui.io:443/',\n\tfaucet: 'https://faucet.devnet.sui.io/gas',\n});\n\nexport const testnetConnection = new Connection({\n\tfullnode: 'https://fullnode.testnet.sui.io:443/',\n\tfaucet: 'https://faucet.testnet.sui.io/gas',\n});\n\nexport const mainnetConnection = new Connection({\n\tfullnode: 'https://fullnode.mainnet.sui.io:443/',\n});\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAAA,QAAA;AASO,MAAMC,UAAA,CAAW;EAEvBC,YAAYC,OAAA,EAA4B;IADxCC,YAAA,OAAAJ,QAAA;IAECK,YAAA,OAAKL,QAAA,EAAWG,OAAA;EACjB;EAEA,IAAIG,SAAA,EAAW;IACd,OAAOC,YAAA,OAAKP,QAAA,EAASM,QAAA;EACtB;EAAA;EAGA,IAAIE,UAAA,EAAY;IACf,OAAOD,YAAA,OAAKP,QAAA,EAASQ,SAAA,IAAaD,YAAA,OAAKP,QAAA,EAASM,QAAA;EACjD;EAEA,IAAIG,OAAA,EAAS;IACZ,OAAOF,YAAA,OAAKP,QAAA,EAASS,MAAA;EACtB;AACD;AAjBCT,QAAA,OAAAU,OAAA;AAqBM,MAAMC,kBAAA,GAAqB,IAAIV,UAAA,CAAW;EAChDK,QAAA,EAAU;EACVG,MAAA,EAAQ;AACT,CAAC;AAEM,MAAMG,gBAAA,GAAmB,IAAIX,UAAA,CAAW;EAC9CK,QAAA,EAAU;EACVG,MAAA,EAAQ;AACT,CAAC;AAEM,MAAMI,iBAAA,GAAoB,IAAIZ,UAAA,CAAW;EAC/CK,QAAA,EAAU;EACVG,MAAA,EAAQ;AACT,CAAC;AAEM,MAAMK,iBAAA,GAAoB,IAAIb,UAAA,CAAW;EAC/CK,QAAA,EAAU;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}