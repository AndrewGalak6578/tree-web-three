{"ast":null,"code":"const PRIVATE_KEY_SIZE = 32;\nconst LEGACY_PRIVATE_KEY_SIZE = 64;\nexport { LEGACY_PRIVATE_KEY_SIZE, PRIVATE_KEY_SIZE };","map":{"version":3,"names":["PRIVATE_KEY_SIZE","LEGACY_PRIVATE_KEY_SIZE"],"sources":["/Users/admin/Downloads/tree-web-three1/tree-web-three-react/node_modules/@mysten/sui.js/src/cryptography/keypair.ts"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { PublicKey } from './publickey.js';\nimport type { SignatureScheme } from './signature.js';\n\nexport const PRIVATE_KEY_SIZE = 32;\nexport const LEGACY_PRIVATE_KEY_SIZE = 64;\n\nexport type ExportedKeypair = {\n\tschema: SignatureScheme;\n\tprivateKey: string;\n};\n\n/**\n * A keypair used for signing transactions.\n */\nexport interface Keypair {\n\t/**\n\t * The public key for this keypair\n\t */\n\tgetPublicKey(): PublicKey;\n\n\t/**\n\t * Return the signature for the data\n\t */\n\tsignData(data: Uint8Array): Uint8Array;\n\n\t/**\n\t * Get the key scheme of the keypair: Secp256k1 or ED25519\n\t */\n\tgetKeyScheme(): SignatureScheme;\n\n\texport(): ExportedKeypair;\n}\n"],"mappings":"AAMO,MAAMA,gBAAA,GAAmB;AACzB,MAAMC,uBAAA,GAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}