{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransportRequestManager = void 0;\nvar events_1 = require(\"events\");\nvar Error_1 = require(\"../Error\");\nvar TransportRequestManager = /** @class */function () {\n  function TransportRequestManager() {\n    this.pendingRequest = {};\n    this.pendingBatchRequest = {};\n    this.transportEventChannel = new events_1.EventEmitter();\n  }\n  TransportRequestManager.prototype.addRequest = function (data, timeout) {\n    this.transportEventChannel.emit(\"pending\", data);\n    if (data instanceof Array) {\n      this.addBatchReq(data, timeout);\n      return Promise.resolve();\n    }\n    return this.addReq(data.internalID, timeout);\n  };\n  TransportRequestManager.prototype.settlePendingRequest = function (request, error) {\n    var _this = this;\n    request.forEach(function (req) {\n      var resolver = _this.pendingRequest[req.internalID];\n      delete _this.pendingBatchRequest[req.internalID];\n      if (resolver === undefined) {\n        return;\n      }\n      if (error) {\n        resolver.reject(error);\n        return;\n      }\n      resolver.resolve();\n      // Notifications have no response and should clear their own pending requests\n      if (req.request.id === null || req.request.id === undefined) {\n        delete _this.pendingRequest[req.internalID];\n      }\n    });\n  };\n  TransportRequestManager.prototype.isPendingRequest = function (id) {\n    return this.pendingRequest.hasOwnProperty(id);\n  };\n  TransportRequestManager.prototype.resolveResponse = function (payload, emitError) {\n    if (emitError === void 0) {\n      emitError = true;\n    }\n    var data = payload;\n    try {\n      data = JSON.parse(payload);\n      if (this.checkJSONRPC(data) === false) {\n        return; // ignore messages that are not conforming to JSON-RPC\n      }\n\n      if (data instanceof Array) {\n        return this.resolveBatch(data, emitError);\n      }\n      return this.resolveRes(data, emitError);\n    } catch (e) {\n      var err = new Error_1.JSONRPCError(\"Bad response format\", Error_1.ERR_UNKNOWN, payload);\n      if (emitError) {\n        this.transportEventChannel.emit(\"error\", err);\n      }\n      return err;\n    }\n  };\n  TransportRequestManager.prototype.addBatchReq = function (batches, timeout) {\n    var _this = this;\n    batches.forEach(function (batch) {\n      var resolve = batch.resolve,\n        reject = batch.reject;\n      var internalID = batch.request.internalID;\n      _this.pendingBatchRequest[internalID] = true;\n      _this.pendingRequest[internalID] = {\n        resolve: resolve,\n        reject: reject\n      };\n    });\n    return Promise.resolve();\n  };\n  TransportRequestManager.prototype.addReq = function (id, timeout) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      if (timeout !== null && timeout) {\n        _this.setRequestTimeout(id, timeout, reject);\n      }\n      _this.pendingRequest[id] = {\n        resolve: resolve,\n        reject: reject\n      };\n    });\n  };\n  TransportRequestManager.prototype.checkJSONRPC = function (data) {\n    var payload = [data];\n    if (data instanceof Array) {\n      payload = data;\n    }\n    return payload.every(function (datum) {\n      return datum.result !== undefined || datum.error !== undefined || datum.method !== undefined;\n    });\n  };\n  TransportRequestManager.prototype.processResult = function (payload, prom) {\n    if (payload.error) {\n      var err = Error_1.convertJSONToRPCError(payload);\n      prom.reject(err);\n      return;\n    }\n    prom.resolve(payload.result);\n  };\n  TransportRequestManager.prototype.resolveBatch = function (payload, emitError) {\n    var _this = this;\n    var results = payload.map(function (datum) {\n      return _this.resolveRes(datum, emitError);\n    });\n    var errors = results.filter(function (result) {\n      return result;\n    });\n    if (errors.length > 0) {\n      return errors[0];\n    }\n    return undefined;\n  };\n  TransportRequestManager.prototype.resolveRes = function (data, emitError) {\n    var id = data.id,\n      error = data.error;\n    var status = this.pendingRequest[id];\n    if (status) {\n      delete this.pendingRequest[id];\n      this.processResult(data, status);\n      this.transportEventChannel.emit(\"response\", data);\n      return;\n    }\n    if (id === undefined && error === undefined) {\n      this.transportEventChannel.emit(\"notification\", data);\n      return;\n    }\n    var err;\n    if (error) {\n      err = Error_1.convertJSONToRPCError(data);\n    }\n    if (emitError && error && err) {\n      this.transportEventChannel.emit(\"error\", err);\n    }\n    return err;\n  };\n  TransportRequestManager.prototype.setRequestTimeout = function (id, timeout, reject) {\n    var _this = this;\n    setTimeout(function () {\n      delete _this.pendingRequest[id];\n      reject(new Error_1.JSONRPCError(\"Request timeout request took longer than \" + timeout + \" ms to resolve\", Error_1.ERR_TIMEOUT));\n    }, timeout);\n  };\n  return TransportRequestManager;\n}();\nexports.TransportRequestManager = TransportRequestManager;","map":{"version":3,"names":["Object","defineProperty","exports","value","TransportRequestManager","events_1","require","Error_1","pendingRequest","pendingBatchRequest","transportEventChannel","EventEmitter","prototype","addRequest","data","timeout","emit","Array","addBatchReq","Promise","resolve","addReq","internalID","settlePendingRequest","request","error","_this","forEach","req","resolver","undefined","reject","id","isPendingRequest","hasOwnProperty","resolveResponse","payload","emitError","JSON","parse","checkJSONRPC","resolveBatch","resolveRes","e","err","JSONRPCError","ERR_UNKNOWN","batches","batch","setRequestTimeout","every","datum","result","method","processResult","prom","convertJSONToRPCError","results","map","errors","filter","length","status","setTimeout","ERR_TIMEOUT"],"sources":["/Users/admin/Downloads/tree-web-three1/tree-web-three-react/node_modules/@open-rpc/client-js/build/transports/TransportRequestManager.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransportRequestManager = void 0;\nvar events_1 = require(\"events\");\nvar Error_1 = require(\"../Error\");\nvar TransportRequestManager = /** @class */ (function () {\n    function TransportRequestManager() {\n        this.pendingRequest = {};\n        this.pendingBatchRequest = {};\n        this.transportEventChannel = new events_1.EventEmitter();\n    }\n    TransportRequestManager.prototype.addRequest = function (data, timeout) {\n        this.transportEventChannel.emit(\"pending\", data);\n        if (data instanceof Array) {\n            this.addBatchReq(data, timeout);\n            return Promise.resolve();\n        }\n        return this.addReq(data.internalID, timeout);\n    };\n    TransportRequestManager.prototype.settlePendingRequest = function (request, error) {\n        var _this = this;\n        request.forEach(function (req) {\n            var resolver = _this.pendingRequest[req.internalID];\n            delete _this.pendingBatchRequest[req.internalID];\n            if (resolver === undefined) {\n                return;\n            }\n            if (error) {\n                resolver.reject(error);\n                return;\n            }\n            resolver.resolve();\n            // Notifications have no response and should clear their own pending requests\n            if (req.request.id === null || req.request.id === undefined) {\n                delete _this.pendingRequest[req.internalID];\n            }\n        });\n    };\n    TransportRequestManager.prototype.isPendingRequest = function (id) {\n        return this.pendingRequest.hasOwnProperty(id);\n    };\n    TransportRequestManager.prototype.resolveResponse = function (payload, emitError) {\n        if (emitError === void 0) { emitError = true; }\n        var data = payload;\n        try {\n            data = JSON.parse(payload);\n            if (this.checkJSONRPC(data) === false) {\n                return; // ignore messages that are not conforming to JSON-RPC\n            }\n            if (data instanceof Array) {\n                return this.resolveBatch(data, emitError);\n            }\n            return this.resolveRes(data, emitError);\n        }\n        catch (e) {\n            var err = new Error_1.JSONRPCError(\"Bad response format\", Error_1.ERR_UNKNOWN, payload);\n            if (emitError) {\n                this.transportEventChannel.emit(\"error\", err);\n            }\n            return err;\n        }\n    };\n    TransportRequestManager.prototype.addBatchReq = function (batches, timeout) {\n        var _this = this;\n        batches.forEach(function (batch) {\n            var resolve = batch.resolve, reject = batch.reject;\n            var internalID = batch.request.internalID;\n            _this.pendingBatchRequest[internalID] = true;\n            _this.pendingRequest[internalID] = { resolve: resolve, reject: reject };\n        });\n        return Promise.resolve();\n    };\n    TransportRequestManager.prototype.addReq = function (id, timeout) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (timeout !== null && timeout) {\n                _this.setRequestTimeout(id, timeout, reject);\n            }\n            _this.pendingRequest[id] = { resolve: resolve, reject: reject };\n        });\n    };\n    TransportRequestManager.prototype.checkJSONRPC = function (data) {\n        var payload = [data];\n        if (data instanceof Array) {\n            payload = data;\n        }\n        return payload.every(function (datum) { return (datum.result !== undefined || datum.error !== undefined || datum.method !== undefined); });\n    };\n    TransportRequestManager.prototype.processResult = function (payload, prom) {\n        if (payload.error) {\n            var err = Error_1.convertJSONToRPCError(payload);\n            prom.reject(err);\n            return;\n        }\n        prom.resolve(payload.result);\n    };\n    TransportRequestManager.prototype.resolveBatch = function (payload, emitError) {\n        var _this = this;\n        var results = payload.map(function (datum) {\n            return _this.resolveRes(datum, emitError);\n        });\n        var errors = results.filter(function (result) { return result; });\n        if (errors.length > 0) {\n            return errors[0];\n        }\n        return undefined;\n    };\n    TransportRequestManager.prototype.resolveRes = function (data, emitError) {\n        var id = data.id, error = data.error;\n        var status = this.pendingRequest[id];\n        if (status) {\n            delete this.pendingRequest[id];\n            this.processResult(data, status);\n            this.transportEventChannel.emit(\"response\", data);\n            return;\n        }\n        if (id === undefined && error === undefined) {\n            this.transportEventChannel.emit(\"notification\", data);\n            return;\n        }\n        var err;\n        if (error) {\n            err = Error_1.convertJSONToRPCError(data);\n        }\n        if (emitError && error && err) {\n            this.transportEventChannel.emit(\"error\", err);\n        }\n        return err;\n    };\n    TransportRequestManager.prototype.setRequestTimeout = function (id, timeout, reject) {\n        var _this = this;\n        setTimeout(function () {\n            delete _this.pendingRequest[id];\n            reject(new Error_1.JSONRPCError(\"Request timeout request took longer than \" + timeout + \" ms to resolve\", Error_1.ERR_TIMEOUT));\n        }, timeout);\n    };\n    return TransportRequestManager;\n}());\nexports.TransportRequestManager = TransportRequestManager;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}