{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App1.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { ConnectButton } from '@suiet/wallet-kit';\nimport { useWallet } from '@suiet/wallet-kit';\nimport { useEffect } from 'react';\nimport { TransactionBlock } from \"@mysten/sui.js\";\nimport { JsonRpcProvider } from '@mysten/sui.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App1() {\n  _s();\n  const wallet = useWallet();\n  const provider = new JsonRpcProvider();\n  useEffect(() => {\n    var _wallet$account, _wallet$account2;\n    if (!wallet.connected) return;\n    console.log('connected wallet name: ', wallet.name);\n    console.log('account address: ', (_wallet$account = wallet.account) === null || _wallet$account === void 0 ? void 0 : _wallet$account.address);\n    console.log('account publicKey: ', (_wallet$account2 = wallet.account) === null || _wallet$account2 === void 0 ? void 0 : _wallet$account2.publicKey);\n  }, [wallet.connected]);\n  async function handleMoveCall() {\n    const tx = new TransactionBlock();\n    const packageObjectId = \"0x1\";\n    tx.moveCall({\n      target: `0x41d154bdf99fa90ce79b963561c83c206f8c9dc0b868ea3d7ab5b28d33a47bb4::devnet_nft::mint_to_sender`,\n      arguments: [tx.pure(\"Sample NFT\"), tx.pure(\"sample minted NFT\"), tx.pure(\"https://github.com/AndrewGalak6578/tree-web-three/blob/main/logo.png?raw=true\")]\n    });\n    await wallet.signAndExecuteTransactionBlock({\n      transactionBlock: tx\n    });\n  }\n  async function handleSignMessage() {\n    var _wallet$account3;\n    const objects = await provider.getOwnedObjects({\n      owner: (_wallet$account3 = wallet.account) === null || _wallet$account3 === void 0 ? void 0 : _wallet$account3.address\n    });\n    await wallet.signMessage({\n      message: new TextEncoder().encode(\"Hello World\")\n    });\n    console.log('account NFTs: ', objects);\n    console.log('');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App1\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleMoveCall(),\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSignMessage(),\n      children: \"Sign message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App1, \"Op0/wBxK9c7Ln+hGs0edgZQ9zC0=\", false, function () {\n  return [useWallet];\n});\n_c = App1;\nexport default App1;\nvar _c;\n$RefreshReg$(_c, \"App1\");","map":{"version":3,"names":["logo","ConnectButton","useWallet","useEffect","TransactionBlock","JsonRpcProvider","jsxDEV","_jsxDEV","App1","_s","wallet","provider","_wallet$account","_wallet$account2","connected","console","log","name","account","address","publicKey","handleMoveCall","tx","packageObjectId","moveCall","target","arguments","pure","signAndExecuteTransactionBlock","transactionBlock","handleSignMessage","_wallet$account3","objects","getOwnedObjects","owner","signMessage","message","TextEncoder","encode","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/tree-web-three1/tree-web-three-react/src/App1.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport {ConnectButton} from '@suiet/wallet-kit';\nimport { useWallet } from '@suiet/wallet-kit';\nimport { useEffect } from 'react';\nimport { TransactionBlock} from \"@mysten/sui.js\";\nimport { JsonRpcProvider } from '@mysten/sui.js';\n\nfunction App1() {\n  const wallet = useWallet()\n  const provider = new JsonRpcProvider();\n  \n\n  useEffect(() => {\n    if (!wallet.connected) return;\n    console.log('connected wallet name: ', wallet.name)\n    console.log('account address: ', wallet.account?.address)\n    console.log('account publicKey: ', wallet.account?.publicKey)\n  }, [wallet.connected])\n\n  async function handleMoveCall() {\n    const tx = new TransactionBlock();\n    const packageObjectId = \"0x1\";\n    tx.moveCall({\n      target: `0x41d154bdf99fa90ce79b963561c83c206f8c9dc0b868ea3d7ab5b28d33a47bb4::devnet_nft::mint_to_sender`,\n      arguments: [\n        tx.pure(\"Sample NFT\"), \n        tx.pure(\"sample minted NFT\"),\n        tx.pure(\"https://github.com/AndrewGalak6578/tree-web-three/blob/main/logo.png?raw=true\")], \n    });\n    await wallet.signAndExecuteTransactionBlock({\n      transactionBlock: tx,\n    });\n  }\n\n  async function handleSignMessage() {\n    const objects = await provider.getOwnedObjects({\n        owner: wallet.account?.address,\n      });\n    await wallet.signMessage({\n      message: new TextEncoder().encode(\"Hello World\"),\n      \n    });\n    console.log('account NFTs: ', objects);\n    console.log('')\n    \n  }\n\n  return (\n    <div className=\"App1\">\n      \n      \n        \n        <button onClick={() => handleMoveCall()}>Mint NFT</button>\n        <button onClick={() => handleSignMessage()}>Sign message</button>\n        \n        \n      \n      \n    </div>\n    \n  );\n}\n\nexport default App1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}